#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'servicio_reproduccion_types'

module ServicioReproduccion
  class Client
    include ::Thrift::Client

    def ObtenerCancion(nombreArchivo)
      send_ObtenerCancion(nombreArchivo)
      return recv_ObtenerCancion()
    end

    def send_ObtenerCancion(nombreArchivo)
      send_message('ObtenerCancion', ObtenerCancion_args, :nombreArchivo => nombreArchivo)
    end

    def recv_ObtenerCancion()
      result = receive_message(ObtenerCancion_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'ObtenerCancion failed: unknown result')
    end

    def SubirAudio(audioCancion)
      send_SubirAudio(audioCancion)
      return recv_SubirAudio()
    end

    def send_SubirAudio(audioCancion)
      send_message('SubirAudio', SubirAudio_args, :audioCancion => audioCancion)
    end

    def recv_SubirAudio()
      result = receive_message(SubirAudio_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'SubirAudio failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_ObtenerCancion(seqid, iprot, oprot)
      args = read_args(iprot, ObtenerCancion_args)
      result = ObtenerCancion_result.new()
      result.success = @handler.ObtenerCancion(args.nombreArchivo)
      write_result(result, oprot, 'ObtenerCancion', seqid)
    end

    def process_SubirAudio(seqid, iprot, oprot)
      args = read_args(iprot, SubirAudio_args)
      result = SubirAudio_result.new()
      result.success = @handler.SubirAudio(args.audioCancion)
      write_result(result, oprot, 'SubirAudio', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class ObtenerCancion_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NOMBREARCHIVO = 1

    FIELDS = {
      NOMBREARCHIVO => {:type => ::Thrift::Types::STRING, :name => 'nombreArchivo'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ObtenerCancion_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::AudioCancion}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SubirAudio_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    AUDIOCANCION = 1

    FIELDS = {
      AUDIOCANCION => {:type => ::Thrift::Types::STRUCT, :name => 'audioCancion', :class => ::AudioCancion}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SubirAudio_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

